name: Build and Push Docker Image

on:
  push:
    branches:
      - dev

  release:
    types: [published]

env:
  IMAGE_NAME: github.repository_owner
  REGISTRY_NAME: ghcr.io/${{ github.repository_owner }}
  LATEST_BRANCH: dev
  DOCKER_SOURCE: ghcr.io
  DOCKER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_USER: ${{ github.actor }}

jobs:
  get_version:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: set version
        id: set_version
        run: |
          # Get Version from release name
          VERSION=$(echo "${{ github.event.release.name }}" | tr -d 'v')
          # Use Docker `latest` tag convention
          [ ${{ steps.extract_branch.outputs.branch }} == "$LATEST_BRANCH" ] && VERSION=latest

    outputs:
      version: ${{ steps.set_version.outputs.version }}

  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      # contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo $DOCKER_TOKEN | docker login $DOCKER_SOURCE -u $DOCKER_USER --password-stdin

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Push image
        run: |
          IMAGE_ID=$REGISTRY_NAME/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  # build-and-push:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Build and Push Docker Image
  #       env:
  #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #       run: |
  #         docker buildx create --use
  #         docker login ghcr.io -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  #         docker buildx build --push --platform linux/amd64,linux/arm64 -t ghcr.io/${{ github.repository }}:latest .
