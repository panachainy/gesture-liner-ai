name: Build and Push Docker Image

on:
  push:
    branches:
      - dev

  release:
    types: [published]

env:
  # can't use `${{ github.repository }}` because it receive `octocat/Hello-World` - octocat is duplicate to owner of repo
  IMAGE_NAME: tensorflow-liner-ai
  # ex. `ghcr.io/octocat`
  REGISTRY_NAME: ghcr.io/${{ github.repository_owner }}
  LATEST_BRANCH: dev
  DOCKER_SOURCE: ghcr.io
  DOCKER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_USER: ${{ github.actor }}

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Set Version
        id: set-version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            version=$(echo "${{ github.event.release.tag_name }}" | tr -d 'v')
          else
            version="latest"
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT
      - name: Display Version
        run: |
          version="${{ steps.set-version.outputs.version }}"
          echo "Version: $version"
    outputs:
      version: ${{ steps.set-version.outputs.version }}

  push:
    needs: [check-version]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      # contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Log into registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo $DOCKER_TOKEN | docker login $DOCKER_SOURCE -u $DOCKER_USER --password-stdin

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Push image
        run: |
          IMAGE_ID=$REGISTRY_NAME/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION="${{ needs.check-version.outputs.version }}"

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
